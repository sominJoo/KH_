<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="student">
	<!--  값전달시 #{getter에서 get을 제외하고, 소문자로 시작하는 이름} OGNL방식  -->
	<insert id="insertStudent" parameterType="student"> 
		insert into student(no, name, tel) values( seq_student_no.nextval, #{name}, #{tel} ) 
	</insert>
	
	
	<!--  map 전달  -->
	<insert id="insertStudentMap" parameterType="map"> 
		insert into student(no, name, tel) values( seq_student_no.nextval, #{name}, #{tel} ) 
	</insert>
	
	<!-- 
		select절은 결과값의 타입 지정 필요 (resultType | resultMap은 필수 속성이다)
	-->
	<select id="selectStudentCount" resultType="_int">
		select count(*)	from student
	</select>
	
	<!-- 
		mybatis-config에서 등록해놔서 package 없이  별칭으로 student로 작성 가능
		
		
		필드명 불일치 시 
		1. query alias 지정 - 대소문자 구분위해 "" 필수
			reg_date "regDate"
		2. resultMap - db 컬럼과 vo필드(property)를 연결
		3. mybatis-config에서 setting태그 mapUnderscoreToCamelCase true 설정
	 -->
	<select id="selectOneStudent" resultType="student">
		select *
		from student where no = #{no}
	</select>	 
	
	<!-- 2번 방법 - resultmap 사용
			1. 이름 불일치 해결
			2. 형변환 처리를 임의로 지정 가능
		- column과 property가 동일하다면, 해당 자식 태그는 생략 가능
		- 재사용 가능
	-->
<!-- 	<select id="selectOneStudent" resultMap="studentMap">
		select no, name, tel, reg_date
		from student where no = #{no}
	</select>
	<resultMap type="student" id="studentMap">
		pk컬럼용
		<id column="no" property="no"/>
		
		나머지 컬럼용
		<result column="name" property="name"/>
		<result column="tel" property="tel"/>
		<result column="reg_date" property="regDate"/>
	</resultMap> -->
	
	
	
	
<!-- 	<select id="selectOneMapStudent" resultType="hashmap">
		select *
		from student where no = #{no}
	</select>	  -->
	
	
	<select id="selectOneMapStudent" resultMap="studentMap">
		select *
		from student where no = #{no}
	</select>
	<resultMap type="map" id="studentMap">
		<id column="no" property="no"/>
		<result column="name" property="name"/>
		<result column="tel" property="tel"/>
		<result column="reg_date" property="regDate"/>
	</resultMap>
	
	
	
	
	<update id="updateStudent">
		update student
		set name=#{name}, tel = #{tel}
		where no =#{no}
	</update>
	
	<delete id="deleteStudent">
		delete from student
		where no = #{no}
	</delete>
	
	
	<select id="selectStudentList" resultType="student">
		select *
		from student 
		order by reg_date desc
	</select>
	
	
	<select id="selectStudenMapList" resultMap="studentMap">
		select *
		from student 
		order by reg_date desc
	</select>

</mapper>